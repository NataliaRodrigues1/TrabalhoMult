library(gridExtra)
library(ggplot2)
library(xtable)
library(GGally)
setwd("C:/Users/naatr/Documents/Análise Multivariada/Trabalho/Parte1/TrabalhoMultParte1")
dados <- read.table("moscas.csv", header = TRUE, sep = ";")
attach(dados)
Especie <- ifelse( Especie == "Torrens", 0, 1)
especie <- dados[,1]
n <- nrow(dados)
mx <- as.matrix(dados[,2:8])
nvar <- 7
inames <- c("comprimento da asa","largura da asa","comprimento do 3 palpo","largura do 3 palpo","comprimento do 2 palpo","comprimento do 12 segmento da antena", "comprimento do 13 segmento da antena")
dadosd <- dados[,2:8]
boxCAsa <- ggplot(dados, aes(Especie, C.Asa, group = Especie)) +
geom_boxplot() +theme_classic() +  scale_y_continuous("C.Asa")
#boxCAsa
boxLAsa <- ggplot(dados, aes(Especie, L.Asa, group = Especie)) +
geom_boxplot() +theme_classic() +  scale_y_continuous("L.Asa")
#boxLAsa
boxC3p <- ggplot(dados, aes(Especie, C3p, group = Especie)) +
geom_boxplot() +theme_classic() +  scale_y_continuous("C3p")
#boxC3p
boxL3p <- ggplot(dados, aes(Especie, L3p, group = Especie)) +
geom_boxplot() +theme_classic() +  scale_y_continuous("L3p")
#boxL3p
boxC4p <- ggplot(dados, aes(Especie, C4p, group = Especie)) +
geom_boxplot() +theme_classic() +  scale_y_continuous("C4p")
#boxC4p
boxC12a <- ggplot(dados, aes(Especie, C12a, group = Especie)) +
geom_boxplot() +theme_classic() +  scale_y_continuous("C12a")
#boxC12a
boxC13a <-  ggplot(dados, aes(Especie, C13a, group = Especie)) +
geom_boxplot() +theme_classic() +  scale_y_continuous("C13a")
#boxC13a
grid.arrange(boxCAsa, boxLAsa, boxC3p, boxL3p, boxC4p, boxC12a, boxC13a, nrow=3, ncol=3)
#par(mfrow =c(1,1))
#boxplot(dados[,2]~especie,xlab="Especie",ylab="Comp. da asa",cex=1.3,cex.lab=1.3,cex.axis=1.3)
#boxplot(dados[,3]~especie,xlab="Especie",ylab="lar. da asa",cex=1.3,cex.lab=1.3,cex.axis=1.3)
#boxplot(dados[,4]~especie,xlab="Especie",ylab="comp. do 3 palpo",cex=1.3,cex.lab=1.3,cex.axis=1.3)
#boxplot(dados[,5]~especie,xlab="Especie",ylab="lar. do 3 palpo",cex=1.3,cex.lab=1.3,cex.axis=1.3)
#boxplot(dados[,6]~especie,xlab="Especie",ylab="comp. do 2 palpo",cex=1.3,cex.lab=1.3,cex.axis=1.3)
#boxplot(dados[,7]~especie,xlab="Especie",ylab="comp. do 12 segm.",cex=1.3,cex.lab=1.3,cex.axis=1.3)
#boxplot(dados[,8]~especie,xlab="Especie",ylab="comp. do 13 segm.",cex=1.3,cex.lab=1.3,cex.axis=1.3)
histC.Asa <- ggplot(dados,aes(C.Asa))+geom_histogram(breaks=seq(80, 115, by=5), color="black", fill="white")+facet_grid(~Especie)+theme_bw()
histL.Asa <- ggplot(dados,aes(L.Asa))+geom_histogram(breaks=seq(15, 50, by=2), color="black", fill="white")+facet_grid(~Especie)+theme_bw()
histC3p <- ggplot(dados,aes(x=C3p))+geom_histogram(breaks=seq(30, 45, by=2), color="black", fill="white")+facet_grid(~Especie)+theme_bw()
histL3p <- ggplot(dados,aes(x=L3p))+geom_histogram(breaks=seq(10, 20, by=2), color="black", fill="white")+facet_grid(~Especie)+theme_bw()
histC4p <- ggplot(dados,aes(x=C4p))+geom_histogram(breaks=seq(20, 40, by=2), color="black", fill="white")+facet_grid(~Especie)+theme_bw()
histC12a <- ggplot(dados,aes(x=C12a))+geom_histogram(breaks=seq(0, 15, by=2), color="black", fill="white")+facet_grid(~Especie)+theme_bw()
histC13a <- ggplot(dados,aes(x=C13a))+geom_histogram(breaks=seq(5, 15, by=2), color="black", fill="white")+facet_grid(~Especie)+theme_bw()
grid.arrange(histC.Asa,histL.Asa,histC3p,histL3p,histC4p,histC12a,histC13a,nrow=4,ncol=2)
# Especie Torrens
#par(mfrow=c(3,3))
#for (j in 1:nvar)
#{
#  hist(dadosd[especie == "Torrens",j],xlab=inames[j],ylab="densidade",main="Torrens",probability=TRUE,cex=1.3,cex.lab=1.3,cex.axis=1.3)
#}
# Especie Carteri
#par(mfrow =c(2,4))
#for (j in 1:nvar)
#{
# hist(dadosd[especie == "Carteri",j],xlab = inames[j],ylab="densidade",main = "Carteri",probability = TRUE,cex=1.3,cex.lab=1.3,cex.axis=1.3)
#}
my_cols <- c("black", "ivory4")
pairs(dados[,2:8],cex.axis=1.3,cex.lab=1.3,pch = c(16, 17)[as.numeric(Especie)],main="Gráfico de Dispersão", col=my_cols[dados$Especie], upper.panel = NULL)
# correlações e covariância
auxcov <- by(dadosd,especie,cov) #matriz de covariancia
auxcor <- by(dadosd,especie,cor) #matriz de correlação
aux.matrix <- ifelse(lower.tri(as.matrix(auxcov$Torrens),diag=TRUE),1,0)
aux.matrix1 <- ifelse(upper.tri(as.matrix(auxcov$Torrens)),1,0)
# Matriz de cov-cor da Especie Torrens
mat.tor <- as.matrix(auxcov$Torrens)*aux.matrix +   as.matrix(auxcor$Torrens)*aux.matrix1
mat.tor <- round(mat.tor,3)
xtable(mat.tor)
# Matriz de cov-cor da Especie Carteri
mat.car <- as.matrix(auxcov$Carteri)*aux.matrix +   as.matrix(auxcor$Carteri)*aux.matrix1
mat.car <- round(mat.car,3)
xtable(mat.car)
## Comprimento da Asa
datadados1 <- data.frame(C.Asa,especie)
medados1 <- ddply(datadados1,.(especie),summarise,media=mean(C.Asa),dp=sqrt(var(C.Asa)),vari=var(C.Asa),cv=100*((sqrt(var(C.Asa))/mean(C.Asa))),minimo=min(C.Asa),mediana=quantile(C.Asa,0.5),maximo=max(C.Asa),n=length(C.Asa))
medados1
##Largura da Asa
datadados2 <- data.frame(L.Asa,especie)
medados2 <- ddply(datadados2,.(especie),summarise,media=mean(L.Asa),dp=sqrt(var(L.Asa)),vari=var(L.Asa),cv=100*((sqrt(var(L.Asa))/mean(L.Asa))),minimo=min(L.Asa),mediana=quantile(L.Asa,0.5),maximo=max(L.Asa),n=length(L.Asa))
medados2
# Comprimento do 3 palpo
datadados3 <- data.frame(C3p,especie)
medados3 <- ddply(datadados3,.(especie),summarise,media=mean(C3p),dp=sqrt(var(C3p)),vari=var(C3p),cv=100*((sqrt(var(C3p))/mean(C3p))),minimo=min(C3p),mediana=quantile(C3p,0.5),maximo=max(C3p),n=length(C3p))
medados3
# Largura do 3 palpo
datadados4 <- data.frame(L3p,especie)
medados4 <- ddply(datadados4,.(especie),summarise,media=mean(L3p),dp=sqrt(var(L3p)),vari=var(L3p),cv=100*((sqrt(var(L3p))/mean(L3p))),minimo=min(L3p),mediana=quantile(L3p,0.5),maximo=max(L3p),n=length(L3p))
medados4
# Comprimento do 2 palpo
datadados5 <- data.frame(C4p,especie)
medados5 <- ddply(datadados5,.(especie),summarise,media=mean(C4p),dp=sqrt(var(C4p)),vari=var(C4p),cv=100*((sqrt(var(C4p))/mean(C4p))),minimo=min(C4p),mediana=quantile(C4p,0.5),maximo=max(C4p),n=length(C4p))
medados5
# Comprimento do 12 segmento de antena
datadados6 <- data.frame(C12a,especie)
medados6 <- ddply(datadados6,.(especie),summarise,media=mean(C12a),dp=sqrt(var(C12a)),vari=var(C12a),cv=100*((sqrt(var(C12a))/mean(C12a))),minimo=min(C12a),mediana=quantile(C12a,0.5),maximo=max(C12a),n=length(C12a))
medados6
# Comprimento do 13 segmento da antena
datadados7 <- data.frame(C13a,especie)
medados7 <- ddply(datadados7,.(especie),summarise,media=mean(C13a),dp=sqrt(var(C13a)),vari=var(C13a),cv=100*((sqrt(var(C13a))/mean(C13a))),minimo=min(C13a),mediana=quantile(C13a,0.5),maximo=max(C13a),n=length(C13a))
medados7
medresumo <- rbind(medados1, medados2, medados3, medados4, medados5, medados6, medados7)
xtable(medresumo)
# Especie Torrens
par(mfrow=c(2,4))
for (j in 1:nvar)
{
qqPlot(scale(mx[especie=="Torrens",j]), dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição da ",inames[j]),cex=1.2,id.cex=1.2)
}
# Especie Carteri
par(mfrow=c(2,4))
for (j in 1:nvar)
{
qqPlot(scale(mx[especie=="Carteri",j]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição da ",inames[j]),cex=1.2,id.cex=1.2)
}
par(mfrow=c(1,2))
# Especie Torrens
vmu <- apply(mx[especie == "Torrens",],2,mean)
s2 <- cov(mx[especie == "Torrens",])
n0 <- nrow(mx[especie == "Torrens",])
mmu <- t(matrix(t(vmu),nvar,n0))
vF <- apply(((mx-vmu)*(mx-vmu)%*%solve(s2)),1,sum)
vF <- (n0-nvar)*vF/((n0-1)*nvar) #transformando na distribuição F
qqPlot(vF,dist="f",df1=nvar,df2=n0-nvar,col.lines=1,grid="FALSE",xlab="quantil da distribuição F",ylab="quantil da forma quadrática", main = "Especie Torrens")
# Especie Carteri
vmu <- apply(mx[especie == "Carteri",],2,mean)
s2 <- cov(mx[especie == "Carteri",])
n0 <- nrow(mx[especie == "Carteri",])
mmu <- t(matrix(t(vmu),nvar,n0))
vF <- apply(((mx-vmu)*(mx-vmu)%*%solve(s2)),1,sum)
vF <- (n0-nvar)*vF/((n0-1)*nvar)
qqPlot(vF,dist="f",df1=nvar,df2=n0-nvar,col.lines=1,grid="FALSE",xlab="quantil da distribuição F",ylab="quantil da forma quadrática", main = "Especie Carteri")
nespecie <- ifelse (especie == "Torrens", 1,2)
v.grupos <- cbind(as.numeric(nespecie))
v.n <- rbind(35,35)
G <- 2
p <- 7
# Função para o Teste de iguldade das matrizes de covariância
Box.teste.Igual.MCov <- function(m.X.completa,v.grupos,v.n,G)
{
# v.grupos (1,2,3...)
# m.X.completa : matriz de dados com todos os grupos
grupo <- 1
m.X.completa <- dadosd
p <- ncol(m.X.completa)
m.X.k <- m.X.completa[v.grupos==grupo,]
Sigma.k <- cov(m.X.k)
m.Sigma.completa <- cbind(grupo,Sigma.k)
Sigma.P <- (v.n[grupo]-1)*Sigma.k # estimativa ponderada
aux.k.1 <- (v.n[grupo] - 1)*log(det(Sigma.k))
grupo <- grupo + 1
for (i in 2:G)
{
m.X.k <- m.X.completa[v.grupos==grupo,] # pegar os dados referentes ao grupo i
Sigma.k <- cov(m.X.k)
m.Sigma.completa <- rbind(m.Sigma.completa,cbind(grupo,Sigma.k))
Sigma.P <- Sigma.P + (v.n[grupo]-1)*Sigma.k # estimativa ponderada
aux.k.1 <- aux.k.1 + (v.n[grupo] - 1)*log(det(Sigma.k))
grupo <- grupo + 1
}
Sigma.P <- Sigma.P/(sum(v.n)-G)
# estatística de ajuste
aux.u <- (sum(1/(v.n - 1)) - (1/(sum(v.n - 1))))*(2*p^2 + 3*p - 1)/(6*(p+1)*(G-1))
Q.B <-  (1 - aux.u)*(sum(v.n-1)*log(det(Sigma.P)) - aux.k.1)
aux.v <- 0.5*p*(p+1)*(G-1)
e.nd.QB <- 1 - pchisq(Q.B,aux.v)
cat("estatística do Teste: ", Q.B, "\n")
cat("nível descritivo: ",e.nd.QB,"\n")
cat("Matrizes de Covariâncias por grupo: \n")
print(m.Sigma.completa)
Sigma.P <- as.matrix(data.frame(Sigma.P))
list(Sigma.P=Sigma.P)
}
# FIM DA FUNÇÃO
m.Sigma.P <- Box.teste.Igual.MCov(dadosd,v.grupos,v.n,G)$Sigma.P
#xtable(m.Sigma.P)
# comparação dos vetores de médias ( Ho : medias sao iguais)
fit.model <- m.ajuste <- manova(as.matrix(dadosd) ~ especie)
summary.manova(m.ajuste,test="Wilks")
summary.manova(m.ajuste,test="Pillai")
summary.manova(m.ajuste,test="Hotelling-Lawley")
summary.manova(m.ajuste,test="Roy")
aux <- summary.aov(m.ajuste)
fit.model <- lm(as.matrix(dados[2:8]) ~ Especie)
fit1 <- summary(fit.model)
TesteF.CBU.M <- function(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
{
m.B <- matrix(coef(fit.model),G,p)
v.beta <- matrix(t(m.B))
m.X <- model.matrix(fit.model)
m.Ca <- kronecker(m.C,t(m.U))
m.Ma <- matrix(t(m.M))
v.theta <- m.Ca%*%v.beta - m.Ma
m.Sigmabeta <- kronecker(solve(t(m.X)%*%m.X),m.Sigma.P)
estat <- t(v.theta)%*%solve(m.Ca%*%(m.Sigmabeta)%*%t(m.Ca))%*%v.theta
p.valor <- 1 - pchisq(estat,df=nrow(m.C)*ncol(m.U))
cat("Estatistica Qui-quadrado = ",round(estat,2),"\n")
cat("pvalor = ",round(p.valor,4),"\n")
cat("Matriz C :","\n")
print(m.C)
cat("Matriz U :","\n")
print(m.U)
cat("Matriz M :","\n")
print(m.M)
}
# variável Comprimento da Asa
m.C <- cbind(0,1) #Torrens x Carteri
m.U <- rbind(1,0,0,0,0,0,0)
m.M <- 0
TesteF.CBU.M(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
# variável Largura da Asa
m.C <- cbind(0,1) #Torrens x Carteri
m.U <- rbind(0,1,0,0,0,0,0)
m.M <- 0
TesteF.CBU.M(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
# variável COmprimento do 3 palpo
m.C <- cbind(0,1) #Torrens x Carteri
m.U <- rbind(0,0,1,0,0,0,0)
m.M <- 0
TesteF.CBU.M(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
# variável Largura do 3 palpo
m.C <- cbind(0,1) #Torrens x Carteri
m.U <- rbind(0,0,0,1,0,0,0)
m.M <- 0
TesteF.CBU.M(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
# variável Comprimento do 2 palpo
m.C <- cbind(0,1) #Torrens x Carteri
m.U <- rbind(0,0,0,0,1,0,0)
m.M <- 0
TesteF.CBU.M(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
# variável Comprimento do 12 segmento da antena
m.C <- cbind(0,1) # Torrens x Carteri
m.U <- rbind(0,0,0,0,0,1,0)
m.M <- 0
TesteF.CBU.M(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
# Variável Comprimento do 13 segmento da antena
m.C <- cbind(0,1) #Torrens x Carteri
m.U <- rbind(0,0,0,0,0,0,1)
m.M <- 0
TesteF.CBU.M(fit.model,m.Sigma.P,p,G,m.C,m.U,m.M)
# resíduos ordinários
m.residuo <- m.ajuste$residuals
m.X <- as.matrix(model.matrix(m.ajuste))
auxres <- diag((diag(n) - m.X%*%solve(t(m.X)%*%m.X)%*%t(m.X)))
m.residuo <- m.residuo/(sqrt((matrix(auxres,70,7))%*%diag(diag(m.Sigma.P)))) #####################
#m.residuo <- m.residuo%*%solve(diag(diag(m.Sigma.P)))
#m.residuo <- m.residuo/sqrt(1-matrix(auxres,35,7))
m.ajustado <- fitted.values(m.ajuste)
# Comprimento da Asa
par(mfrow =c(2,2))
plot(m.residuo[,1],ylim=c(min(-3,min(m.residuo[,1])),max(3,max(m.residuo[,1]))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.ajustado[,1],m.residuo[,1],ylim=c(min(-3,min(m.residuo[,1])),max(3,max(m.residuo[,1]))),xlab="valor ajustado",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo[,1],probability=TRUE,xlab="resíduo studentizado",main="",ylab="densidade")
qqPlot((m.residuo[,1]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
# Largura da Asa
par(mfrow =c(2,2))
plot(m.residuo[,2],ylim=c(min(-3,min(m.residuo[,2])),max(3,max(m.residuo[,2]))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.ajustado[,2],m.residuo[,2],ylim=c(min(-3,min(m.residuo[,2])),max(3,max(m.residuo[,2]))),xlab="valor ajustado",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo[,2],probability=TRUE,xlab="resíduo studentizado",main="",ylab="densidade")
qqPlot((m.residuo[,2]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
# Comprimento do 3 Palpo
par(mfrow =c(2,2))
plot(m.residuo[,3],ylim=c(min(-3,min(m.residuo[,3])),max(3,max(m.residuo[,3]))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.ajustado[,3],m.residuo[,3],ylim=c(min(-3,min(m.residuo[,3])),max(3,max(m.residuo[,3]))),xlab="valor ajustado",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo[,3],probability=TRUE,xlab="resíduo studentizado",main="",ylab="densidade")
qqPlot((m.residuo[,3]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
# Largura do 3 Palpo
par(mfrow =c(2,2))
plot(m.residuo[,4],ylim=c(min(-3,min(m.residuo[,4])),max(3,max(m.residuo[,4]))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.ajustado[,4],m.residuo[,4],ylim=c(min(-3,min(m.residuo[,4])),max(3,max(m.residuo[,4]))),xlab="valor ajustado",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo[,4],probability=TRUE,xlab="resíduo studentizado",main="Histograma dos resíduos",ylab="densidade")
qqPlot((m.residuo[,4]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
# Comprimento do 2 Palpo
par(mfrow =c(2,2))
plot(m.residuo[,5],ylim=c(min(-3,min(m.residuo[,5])),max(3,max(m.residuo[,5]))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.ajustado[,4],m.residuo[,5],ylim=c(min(-3,min(m.residuo[,5])),max(3,max(m.residuo[,5]))),xlab="valor ajustado",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo[,5],probability=TRUE,xlab="resíduo studentizado",main="Histograma dos resíduos",ylab="densidade")
qqPlot((m.residuo[,5]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
# Comprimento do 12segmento da antena
par(mfrow =c(2,2))
plot(m.residuo[,6],ylim=c(min(-3,min(m.residuo[,6])),max(3,max(m.residuo[,6]))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.ajustado[,6],m.residuo[,6],ylim=c(min(-3,min(m.residuo[,6])),max(3,max(m.residuo[,6]))),xlab="valor ajustado",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo[,6],probability=TRUE,xlab="resíduo studentizado",main="Histograma dos resíduos",ylab="densidade")
qqPlot((m.residuo[,6]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
# Comprimento do 13 segmento da antena
par(mfrow =c(2,2))
plot(m.residuo[,7],ylim=c(min(-3,min(m.residuo[,7])),max(3,max(m.residuo[,7]))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.ajustado[,7],m.residuo[,7],ylim=c(min(-3,min(m.residuo[,7])),max(3,max(m.residuo[,7]))),xlab="valor ajustado",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo[,7],probability=TRUE,xlab="resíduo studentizado",main="Histograma dos Residuos",ylab="densidade")
qqPlot((m.residuo[,7]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
dadosaux <- dados
p <- ncol(dadosd)
m.cor <- cor(dadosd)
aut.val <-  eigen(m.cor)$values
aut.vec <- (eigen(m.cor)$vectors)
m.aut.val <- t(matrix(((aut.val)),p,p))
result.cp.cor <- princomp(dadosd,cor=TRUE)
corr.cp.cor <- aut.vec*sqrt(m.aut.val)
summary(result.cp.cor) # usamos só 3 componentes, que já cobre quase 77% da variância
screeplot(result.cp.cor,type=c("lines"),main="autovalores",cex=1.2,cex.lab=1.2,cex.main=1.2)
cp1 <-  cbind((result.cp.cor$scores)[,1])
cp2 <-  cbind((result.cp.cor$scores)[,2])
cp3 <- cbind((result.cp.cor$scores)[,3])
# dispersão entre as componentes
especie <- as.character(dadosaux[,1])
mycolors <- c("red", "blue")
plot(data.frame(cp1,cp2,cp3), col=mycolors[factor(especie)], pch = 16)
# Por grupo
par(mfrow=c(1,3))
boxplot(cp1~especie,cex=1.2,cex.lab=1.2,xlab="CP1")
boxplot(cp2~especie,cex=1.2,cex.lab=1.2,xlab="CP2")
boxplot(cp3~especie,cex=1.2,cex.lab=1.2,xlab="CP3")
par(mfrow=c(3,2))
hist(cp1[especie=="Torrens"],probability=TRUE,main="CP1",xlab="",ylab="")
hist(cp1[especie=="Carteri"],probability=TRUE,main="CP1",xlab="",ylab="")
hist(cp2[especie=="Torrens"],probability=TRUE,main="CP2",xlab="",ylab="")
hist(cp2[especie=="Carteri"],probability=TRUE,main="CP2",xlab="",ylab="")
hist(cp3[especie=="Torrens"],probability=TRUE,main="CP3",xlab="",ylab="")
hist(cp3[especie=="Carteri"],probability=TRUE,main="CP3",xlab="",ylab="")
par(mfrow=c(3,2))
qqPlot(scale(cp1[especie=="Torrens"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP1",cex=1.2,id.cex=1.2,main="Carteri")
qqPlot(scale(cp1[especie=="Carteri"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP1",cex=1.2,id.cex=1.2,main="Torrens")
qqPlot(scale(cp2[especie=="Torrens"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP2",cex=1.2,id.cex=1.2,main="Carteri")
qqPlot(scale(cp2[especie=="Carteri"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP2",cex=1.2,id.cex=1.2,main="Torrens")
qqPlot(scale(cp3[especie=="Torrens"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP3",cex=1.2,id.cex=1.2,main="Carteri")
qqPlot(scale(cp3[especie=="Carteri"]),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab="CP3",cex=1.2,id.cex=1.2,main="Torrens")
par(mfrow = c(1,1))
#biplot.psych {psych}
especief<-dados[,1]
# Componente 1
fit.model1 <- lm(cp1~especief)
m.residuo1 <- fit.model1$residuals
summary(fit.model1)
# Componente 2
fit.model2 <- lm(cp2~especief)
m.residuo2 <- fit.model2$residuals
# Componente 3
fit.model3 <- lm(cp3~especief)
m.residuo3 <- fit.model3$residuals
par(mfrow =c(1,1))
plot(m.residuo,ylim=c(min(-3,min(m.residuo1)),max(3,max(m.residuo1))),xlab="índice",ylab="resíduo studentizado", main = "Residuos do modelo com a Componente 1")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.residuo,ylim=c(min(-3,min(m.residuo2)),max(3,max(m.residuo2))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
plot(m.residuo,ylim=c(min(-3,min(m.residuo3)),max(3,max(m.residuo3))),xlab="índice",ylab="resíduo studentizado")
abline(-2,0,lty=2)
abline(2,0,lty=2)
abline(0,0,lty=2)
hist(m.residuo1,probability=TRUE,xlab="resíduo studentizado",main="Histograma dos resíduos",ylab="densidade")
qqPlot((m.residuo1),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
hist(m.residuo2,probability=TRUE,xlab="resíduo studentizado",main="Histograma dos resíduos",ylab="densidade")
qqPlot((m.residuo2),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
hist(m.residuo3,probability=TRUE,xlab="resíduo studentizado",main="Histograma dos resíduos",ylab="densidade")
qqPlot((m.residuo3),dist="norm",mean=0,sd=1,col.lines=1,grid="FALSE",xlab="quantil da N(0,1)",ylab=paste("quantil da distribuição do resíduo studentizado"),cex=1.2,id.cex=1.2)
bla <-NULL
bla[dados[,1]=="Torrens"]<-"To"
bla[dados[,1]=="Carteri"]<-"Ca"
biplot(result.cp.cor,xlabs=bla)
biplot(result.cp.cor,c(1,3),xlabs=bla)
biplot(result.cp.cor,2:3,xlabs=bla)
fit1
class(fit1)
fit1 <- list(fit1)
fit1
fit1 <- table(fit1)
fit1 <- sort.list(fit1)
fit.model <- lm(as.matrix(dados[2:8]) ~ Especie)
fit1 <- summary(fit.model)
fit1 <- sort.list(fit1)
recrutas = read.csv("../recrutas.csv", header = TRUE, sep = ";", colClasses = c(rep('factor',4),'numeric'))
recrutas = read.csv("C:/Users/naatr/Documents/Análise de Dados Discretos/Trabalho/Parte 2/recrutas.csv", header = TRUE, sep = ";", colClasses = c(rep('factor',4),'numeric'))
colnames(recrutas) = c("Hábito", "Local", "Idade", "Sexo", "Infecções")
recrutas$Sexo = factor(recrutas$Sexo, levels=c("Female", "Male"), labels=c("Feminino", "Masculino"))
recrutas$Hábito = factor(recrutas$Hábito, levels=c("Freq", "Occas"), labels = c("Frequentemente", "Ocasionalmente"))
recrutas$Local = factor(recrutas$Local, levels=c("Beach", "NonBeach"), label = c("Praia", "Piscina"))
ez = qnorm(0.975)
recrutas1 = ddply(recrutas,
.(Hábito,Local,Idade,Sexo),
summarise,
media = mean(Infecções), var = var(Infecções))
contagem = count(recrutas,.(Hábito,Local,Idade,Sexo))
recrutas1 = cbind(recrutas1,contagem[5])
colnames(recrutas1)[7] = "freq"
recrutasFP = recrutas1[c(1:6),]
recrutasFP$LIIC = recrutasFP$media - ez*sqrt(recrutasFP$var/recrutasFP$freq)
recrutasFP$LSIC = recrutasFP$media + ez*sqrt(recrutasFP$var/recrutasFP$freq)
recrutasFNP = recrutas1[c(7:12),]
recrutasFNP$LIIC = recrutasFNP$media - ez*sqrt(recrutasFNP$var/recrutasFNP$freq)
recrutasFNP$LSIC = recrutasFNP$media + ez*sqrt(recrutasFNP$var/recrutasFNP$freq)
recrutasOP = recrutas1[c(13:18),]
recrutasOP$LIIC = recrutasOP$media - ez*sqrt(recrutasOP$var/recrutasOP$freq)
recrutasOP$LSIC = recrutasOP$media + ez*sqrt(recrutasOP$var/recrutasOP$freq)
recrutasONP = recrutas1[c(19:24),]
recrutasONP$LIIC = recrutasONP$media - ez*sqrt(recrutasONP$var/recrutasONP$freq)
recrutasONP$LSIC = recrutasONP$media + ez*sqrt(recrutasONP$var/recrutasONP$freq)
FP <- ggplot(recrutasFP, aes(x = Idade, y = media, color=Sexo, ymin = LIIC, ymax = LSIC))+
geom_errorbar(size = 1.2,width = 0.1)+
geom_point(size=2) + geom_line(aes(group = Sexo), size=1.2)+
labs(colour = "Sexo", x = "Idade", y = "Média de Infecções") +
theme_bw()+
scale_color_grey(start=0.3,end=0.8)+
ggtitle("Frequênte e Praia")+
theme(legend.position="none")+
facet_wrap(~Sexo)+
ylim(-1.5,8.5)
FP <- ggplot(recrutasFP, aes(x = Idade, y = media, color=Sexo, ymin = LIIC, ymax = LSIC))+
geom_errorbar(size = 1.2,width = 0.1)+
geom_point(size=2) + geom_line(aes(group = Sexo), size=1.2)+
labs(colour = "Sexo", x = "Idade", y = "Média de Infecções") +
theme_bw()+
scale_color_grey(start=0.3,end=0.8)+
ggtitle("Frequênte e Praia")+
theme(legend.position="none")+
facet_wrap(~Sexo)+
ylim(-1.5,8.5)
FNP <- ggplot(recrutasFNP, aes(x = Idade, y = media, color=Sexo, ymin = LIIC, ymax = LSIC))+
geom_errorbar(size=1.2,width = 0.1)+
geom_point(size=2) + geom_line(aes(group = Sexo), size=1.2)+
labs(colour = "Sexo", x = "Idade", y = "Média de Infecções") +
theme_bw()+
scale_color_grey(start=0.3,end=0.8)+
ggtitle("Frequênte e Piscina")+
theme(legend.position="none")+
facet_wrap(~Sexo)+
ylim(-1.5,8.5)
OP <- ggplot(recrutasOP, aes(x = Idade, y = media, color=Sexo, ymin = LIIC, ymax = LSIC))+
geom_errorbar(size=1.2,width = 0.1)+
geom_point(size=2) + geom_line(aes(group = Sexo), size=1.2)+
labs(colour = "Sexo", x = "Idade", y = "Média de Infecções") +
theme_bw()+
scale_color_grey(start=0.3,end=0.8)+
ggtitle("Ocasional e Praia")+
theme(legend.position="none")+
facet_wrap(~Sexo)+
ylim(-1.5,8.5)
ONP <- ggplot(recrutasONP, aes(x = Idade, y = media, color=Sexo, ymin = LIIC, ymax = LSIC))+
geom_errorbar(size=1.2,width = 0.1)+
geom_point(size=2) + geom_line(aes(group = Sexo), size=1.2)+
labs(colour = "Sexo", x = "Idade", y = "Média de Infecções") +
theme_bw()+
scale_color_grey(start=0.3,end=0.8)+
ggtitle("Ocasional e Piscina")+
theme(legend.position="none")+
facet_wrap(~Sexo)+
ylim(-1.5,8.5)
grid.arrange(FP,FNP,OP,ONP,ncol=2)
Hab<-ggplot(recrutas,aes(x = Hábito, y = Infecções))+
geom_boxplot()+
theme_bw()
Loc<-ggplot(recrutas,aes(x = Local, y = Infecções))+
geom_boxplot()+
theme_bw()
Id<-ggplot(recrutas,aes(x = Idade, y = Infecções))+
geom_boxplot()+
theme_bw()
Sex<-ggplot(recrutas,aes(x = Sexo, y = Infecções))+
geom_boxplot()+
theme_bw()
grid.arrange(Hab,Loc,Id,Sex,ncol=2)
fit1 <- summary(fit.model)
